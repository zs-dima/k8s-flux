# ---
# apiVersion: v1
# kind: Secret
# data:
#   username: cG9zdGdyZXM=
#   password: c2VjcmV0X3Bhc3N3b3Jk
# metadata:
#   name: basic-auth-key
# type: kubernetes.io/basic-auth
# --- YXBw cluster-example-app-user
# apiVersion: v1
# kind: Secret
# type: kubernetes.io/basic-auth
# metadata:
#   name: cluster-example-superuser
# data:
#   username: cG9zdGdyZXM=
#   password: dU4zaTFIaDBiWWJDYzRUeVZBYWNCaG1TemdxdHpxeG1PVmpBbjBRSUNoc0pyU211OVBZMmZ3MnE4RUtLTHBaOQ==
# ---
# apiVersion: v1
# kind: Secret
# metadata:
#   name: backup-creds
# data:
#   ACCESS_KEY_ID: a2V5X2lk
#   ACCESS_SECRET_KEY: c2VjcmV0X2tleQ==
---
apiVersion: postgresql.cnpg.io/v1
kind: Cluster
metadata:
  name: postgres-system
spec:
  description: "System postgres cluster"
  # imageName: ghcr.io/cloudnative-pg/postgresql:15.3
  # imagePullSecret is only required if the images are located in a private registry
  # imagePullSecrets:
  #   - name: private_registry_access
  instances: 3
  startDelay: 300
  stopDelay: 300
  primaryUpdateStrategy: unsupervised

  postgresql:
    parameters:
      shared_buffers: 256MB
      pg_stat_statements.max: "10000"
      pg_stat_statements.track: all
      auto_explain.log_min_duration: "10s"
    pg_hba:
      - host all all 10.244.0.0/16 md5

  bootstrap:
    initdb:
      database: app
      owner: app # must match secret username
      secret:
        name: postgres-auth-key
    # Alternative bootstrap method: start from a backup
    #recovery:
    #  backup:
    #    name: backup-on-demand

  superuserSecret:
    name: postgres-su-key # must have postgres username

  storage:
    storageClass: longhorn
    size: 1Gi

  monitoring:
    enablePodMonitor: true

  # nodeSelector:
  # kubernetes.io/role: "worker"
  # serviceAccountTemplate: #
  #   metadata:
  #     annotations:
  #       iam.gke.io/gcp-service-account: cnpg@<project>.iam.gserviceaccount.com

  # backup:
  #   barmanObjectStore:
  #     destinationPath: s3://cluster-example-full-backup/
  #     endpointURL: http://custom-endpoint:1234
  #     s3Credentials:
  #       accessKeyId:
  #         name: backup-creds
  #         key: ACCESS_KEY_ID
  #       secretAccessKey:
  #         name: backup-creds
  #         key: ACCESS_SECRET_KEY
  #     wal:
  #       compression: gzip
  #       encryption: AES256
  #     data:
  #       compression: gzip
  #       encryption: AES256
  #       immediateCheckpoint: false
  #       jobs: 2
  #   retentionPolicy: "30d"

  resources:
    requests:
      memory: "512Mi"
      cpu: "1"
    limits:
      memory: "1Gi"
      cpu: "2"

  affinity:
    enablePodAntiAffinity: true
    topologyKey: failure-domain.beta.kubernetes.io/zone

  nodeMaintenanceWindow:
    inProgress: false
    reusePVC: false
